@page "/rooms"
@using BecauseImClever.AutomationModels
@using BlazorDemo.Client.Components
@inject HttpClient Http
<h3>Rooms</h3>
@if (rooms == null)
{
    if (isLoading)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <button class="btn btn-info" @onclick="@LoadRooms">Load Rooms</button>

    }
}
else
{
    <div class="row">
        @foreach (var room in rooms)
        {
            <RoomComponent room="@room" Delete="@(()=> {  Console.WriteLine(room.Name + " is getting deleted"); rooms.Remove(room);})"></RoomComponent>
        }
    </div>
    <div class="row">
        <button @onclick="@CreateRoom">Create Room</button>
    </div>

}
@code {
    List<Room> rooms;
    bool isLoading = false;
    protected override async Task OnInitializedAsync()
    {
        await LoadRooms();
    }
    private async Task LoadRooms()
    {
        isLoading = true;
        rooms = await Http.GetJsonAsync<List<Room>>(@"api/room");
        isLoading = false;
    }
    private async Task UpdateRoom(Room room)
    {
    }
    
    private async Task CreateRoom()
    {
        var room = await Http.PostJsonAsync<Room>(@"api/room", new Room());
        rooms.Add(room);
    }
}
