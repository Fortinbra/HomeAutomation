@inject HttpClient Http
<div class="col-lg-6 col-md-12 mb-2">
    <form>
        <div class="card border-primary rounded-0">
            <div class="card-header p-0">
                <div class="bg-info text-white text-center py-2">
                    <h3>
                        <i class="fa fa-envelope"></i>  @room.Name
                    </h3>
                </div>
            </div>
            <div class="card-body p-3">
                <div class="form-group">
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text">
                                <i class="fa fa-user text-info"></i>
                            </div>
                            <input type="text" placeholder="Id" @bind="@room.Id" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text">
                                <i class="fa fa-user text-info"></i>
                            </div>
                            <input type="text" placeholder="Room Name" @bind="@room.Name" />
                        </div>
                    </div>
                </div>
                <div class="text-center">
                    <button type="button" class="btn btn-info rounded-0 py-2 px-4 mr-2"
                            @onclick="@(() => UpdateRoom(room))">
                        Update
                    </button>
                    <button type="button" class="btn btn-danger rounded-0 py-2 px-4"
                            @onclick="@(() => DeleteRoom(room))">
                        Delete
                    </button>
                </div>
                <div class="text-center">
                    <NavLink class="nav-link" href="devices">
                        <span class="oi oi-puzzle-piece" aria-hidden="true"></span> View Devices
                    </NavLink>
                </div>
            </div>
        </div>
    </form>
</div>

@code {
    [Parameter] public Room room { get; set; }
    [Parameter] public EventCallback Delete { get; set; }
    [Parameter] public EventCallback Update { get; set; }
    private async Task UpdateRoom(Room room)
    {
        Console.WriteLine(room.Id);
        var updatedRoom = await Http.PutJsonAsync<Room>(@"api/room", room);
        Console.WriteLine(updatedRoom.Name + " was updated.");
    }
    private async Task DeleteRoom(Room room)
    {
        await Http.DeleteAsync($"api/room/{room.Id}");
        try
        {
            await Delete.InvokeAsync(room);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
